"""
6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит
информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами
(характеристиками товара: название, цена, количество, единица измерения). Структуру нужно сформировать программно,
т.е. запрашивать все данные у пользователя.

Пример готовой структуры:
[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
например название, а значение — список значений-характеристик, например список названий товаров.
Пример:
{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}
"""

productList = []
spec = ["название", "цена", "количество", "ед"]

productDict = {}

iterator = 0

while True:
    userInput = input("Введите через пробел называние, цену, количество и единицы измерения товара  "
                      "или нажмите Enter для завершения:\n")

    if len(userInput) == 0:
        break

    product = userInput.split(sep=" ")
    if len(product) < 4:
        print("Вы ввели слишком мало характеристик, программа завершает работу")
        break

    iterator += 1
    productParameters = {spec[0]: product[0], spec[1]: product[1], spec[2]: product[2], spec[3]: product[3]}
    productList.append((iterator, productParameters))

print(productList)

for sp in spec:
    for _, param in productList:
        if productDict.get(sp):
            if param.get(sp) not in productDict[sp]:
                productDict[sp].append(param.get(sp))
        else:
            productDict[sp] = param.get(sp)

print(productDict)
